#!/usr/bin/env python
import autowaf
import os

# Version of this package (even if built as a child)
MAJOR = '0'
MINOR = '0'
MICRO = '0'
CANVAS_VERSION = "%s.%s.%s" % (MAJOR, MINOR, MICRO)

# Library version (UNIX style major, minor, micro)
# major increment <=> incompatible changes
# minor increment <=> compatible changes (additions)
# micro increment <=> no interface changes
CANVAS_LIB_VERSION = '0.0.0'

# Variables for 'waf dist'
APPNAME = 'canvas'
VERSION = CANVAS_VERSION

canvas_sources = [
	'canvas.cc',
	'debug.cc',
	'item.cc',
	'group.cc',
	'lookup_table.cc',
	'rectangle.cc',
	'types.cc'
]

# Mandatory variables
srcdir = '.'
blddir = 'build'

path_prefix = 'libs/canvas/'

def set_options(opt):
	autowaf.set_options(opt)

def configure(conf):
	autowaf.configure(conf)
	autowaf.check_pkg(conf, 'cairomm-1.0', uselib_store='CAIROMM', atleast_version='1.8.4')
	conf.check_tool('compiler_cxx')

def build(bld):
	obj = bld.new_task_gen(features = 'cxx cshlib')
	obj.source = canvas_sources
	obj.export_incdirs = ['.']
	obj.includes     = ['.']
	obj.uselib       = 'SIGCPP CAIROMM GTKMM'
	obj.name         = 'libcanvas'
	obj.target       = 'canvas'
	obj.vnum         = CANVAS_LIB_VERSION
	obj.install_path = os.path.join(bld.env['LIBDIR'], 'ardour3')
	obj.cxxflags     = [
			'-DPACKAGE="libcanvas"',
			'-DLOCALEDIR="' + os.path.join(
				os.path.normpath(bld.env['DATADIRNAME']), 'locale') + '"']

	if bld.env['BUILD_TESTS'] and bld.env['HAVE_CPPUNIT']:
		
		manual_tests              = '''
			test/hello_world.cc
			test/gtk.cc
		'''.split()

		for t in manual_tests:
			manual_testobj = bld.new_task_gen('cxx', 'program')
			manual_testobj.source = t
			manual_testobj.includes = obj.includes + ['test', '../pbd']
			manual_testobj.uselib       = 'CPPUNIT SIGCPP CAIROMM GTKMM'
			manual_testobj.uselib_local = 'libcanvas'
			manual_testobj.name         = 'libcanvas-manual-tests'
			manual_testobj.target       = t[:-3]
			manual_testobj.install_path = ''

		unit_testobj              = bld.new_task_gen('cxx', 'program')
		unit_testobj.source       = '''
			test/lookup_table.cc
			test/testrunner.cpp
		'''.split()
		unit_testobj.includes     = obj.includes + ['test', '../pbd']
		unit_testobj.uselib       = 'CPPUNIT SIGCPP CAIROMM GTKMM'
		unit_testobj.uselib_local = 'libcanvas'
		unit_testobj.name         = 'libcanvas-unit-tests'
		unit_testobj.target       = 'run-tests'
		unit_testobj.install_path = ''
		unit_testobj.cxxflags     = ['-DPACKAGE="libcanvastest"']
		unit_testobj.cxxflags     += ['-DDATA_DIR="' + os.path.normpath(bld.env['DATADIR']) + '"']
		unit_testobj.cxxflags     += ['-DCONFIG_DIR="' + os.path.normpath(bld.env['CONFIGDIR']) + '"']
		unit_testobj.cxxflags     += ['-DMODULE_DIR="' + os.path.normpath(bld.env['LIBDIR']) + '"']

def shutdown():
	autowaf.shutdown()

